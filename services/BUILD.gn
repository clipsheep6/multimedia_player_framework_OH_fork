# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

group("librecorder_engine") {
    deps = [
        "recorder/engine:media_recorder_engine"
  ]
}

group("libplayer_engine") {
    deps = [
        "player/engine:media_player_engine"
  ]
}

group("libservice_utils") {
    deps = [
        "utils:media_service_utils"
  ]
}

ohos_prebuilt_etc("media_service.rc") {
   source = "etc/media_service.rc"
   relative_install_dir = "init"
   part_name = "multimedia_media_standard"
   subsystem_name = "multimedia"
}

config("media_service_config") {
  visibility = [ ":*" ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
  ]

  include_dirs = [
    "include",
    "sa_media/ipc/include",
    "sa_media/server/include",
    "player/ipc/include",
    "player/server/include",
    "player/engine/include",
    "recorder/ipc/include",
    "recorder/server/include",
    "recorder/engine/include",
    "//utils/native/base/include",
    "//foundation/multimedia/media_standard/services/utils/include",
    "//foundation/multimedia/media_standard/interfaces/innerkits/native/media/include",
  ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("media_service") {
  install_enable = true

  sources = [
    "sa_media/ipc/src/media_service_stub.cpp",
    "sa_media/server/src/media_server.cpp",
    "sa_media/server/src/media_server_manager.cpp",
    "recorder/ipc/src/recorder_service_stub.cpp",
    "recorder/ipc/src/recorder_listener_proxy.cpp",
    "recorder/server/src/recorder_server.cpp",
    "recorder/server/src/recorder_engine_dl.cpp",
    "player/ipc/src/player_service_stub.cpp",
    "player/ipc/src/player_listener_proxy.cpp",
    "player/server/src/player_server.cpp",
    "player/server/src/player_engine_dl.cpp",
  ]

  configs = [
    ":media_service_config",
    "//foundation/graphic/standard/frameworks/surface:surface_public_config"
  ]

  deps = [
     "//utils/native/base:utils",
     "//foundation/graphic/standard/frameworks/surface:surface",
     "utils:media_service_utils",
  ]

  external_deps = [
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
    "safwk:system_ability_fwk",
    "hiviewdfx_hilog_native:libhilog",
    "bytrace_standard:bytrace_core",
  ]

  subsystem_name = "multimedia"
  part_name = "multimedia_media_standard"
}
