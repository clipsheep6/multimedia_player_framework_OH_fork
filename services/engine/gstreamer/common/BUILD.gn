# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("media_engine_gst_common_config") {
  visibility = [ ":*" ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-Wno-deprecated-declarations",
    "-DOHOS_EXT_FUNC",
    "-DOHOS_OPT_COMPAT",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  include_dirs = [
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent/include",
    "//commonlibrary/c_utils/base/include",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/gstreamer/gstreamer",
    "//third_party/gstreamer/gstreamer/libs",
    "//third_party/gstreamer/gstplugins_base",
    "//third_party/gstreamer/gstplugins_base/gst-libs",
    "//third_party/gstreamer/gstplugins_bad/gst-libs",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/loader",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/message",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/metadata",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/playbin_adapter",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/state_machine",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/utils",
    "../player",
    "./appsrc_engine",
    "../plugins/common",
    "//foundation/multimedia/player_framework/services/utils/include",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
    "//foundation/multimedia/player_framework/services/services/engine_intf",
    "//foundation/multimedia/drm_framework/services/drm_service/client/include",
    "//foundation/multimedia/drm_framework/services/drm_service/ipc",
  ]
}

ohos_static_library("media_engine_gst_common") {
  sources = [
    "../player/player_track_parse.cpp",
    "appsrc_engine/appsrc_memory.cpp",
    "appsrc_engine/gst_appsrc_engine.cpp",
    "message/gst_msg_converter.cpp",
    "message/gst_msg_processor.cpp",
    "metadata/gst_meta_parser.cpp",
    "playbin_adapter/playbin2_ctrler.cpp",
    "playbin_adapter/playbin_ctrler_base.cpp",
    "playbin_adapter/playbin_state.cpp",
    "state_machine/state_machine.cpp",
  ]

  configs = [
    ":media_engine_gst_common_config",
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx_public_config",
  ]

  deps = [
    ":media_gst_dfx",
    "../plugins/common:gst_media_common",
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx",
    "//foundation/multimedia/player_framework/services/utils:media_format",
    "//foundation/multimedia/player_framework/services/utils:media_service_utils",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
    "//third_party/gstreamer/gstplugins_base:gstapp_plugin",
    "//third_party/gstreamer/gstplugins_base:gsttag",
    "//third_party/gstreamer/gstreamer:gstreamer",
  ]

  external_deps = [
    "c_utils:utils",
    "drm_framework:drm_framework",
    "graphic_2d:surface",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  subsystem_name = "multimedia"
  part_name = "player_framework"
}

config("media_gst_dfx_config") {
  visibility = [ ":*" ]

  cflags = [
    "-std=c++17",
    "-fno-rtti",
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-fvisibility=hidden",
    "-Wformat=2",
    "-Wfloat-equal",
    "-Wdate-time",
    "-DOHOS_EXT_FUNC",
    "-Werror",
    "-Wextra",
    "-Wimplicit-fallthrough",
    "-Wsign-compare",
    "-Wunused-parameter",
  ]

  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "//third_party/glib/glib",
    "//third_party/glib",
    "//third_party/gstreamer/gstreamer",
    "//third_party/gstreamer/gstreamer/libs",
    "//third_party/gstreamer/gstplugins_base",
    "//third_party/gstreamer/gstplugins_base/gst-libs",
    "//third_party/gstreamer/gstplugins_bad/gst-libs",
    "//foundation/multimedia/player_framework/services/engine/gstreamer/common/utils",
    "//foundation/multimedia/player_framework/services/utils/include",
    "//foundation/multimedia/player_framework/interfaces/inner_api/native",
  ]
}

ohos_static_library("media_gst_dfx") {
  sources = [
    "utils/dumper.cpp",
    "utils/gst_utils.cpp",
  ]

  configs = [
    ":media_gst_dfx_config",
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx_public_config",
  ]

  deps = [
    "//foundation/multimedia/player_framework/services/dfx:media_service_log_dfx",
    "//foundation/multimedia/player_framework/services/utils:media_format",
    "//third_party/glib:glib",
    "//third_party/glib:gobject",
    "//third_party/gstreamer/gstreamer:gstreamer",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  subsystem_name = "multimedia"
  part_name = "player_framework"
}
