diff --git a/services/engine/gstreamer/player/gst_player_ctrl.cpp b/services/engine/gstreamer/player/gst_player_ctrl.cpp
index 7487c05..65f3d71 100644
--- a/services/engine/gstreamer/player/gst_player_ctrl.cpp
+++ b/services/engine/gstreamer/player/gst_player_ctrl.cpp
@@ -481,17 +481,13 @@ int32_t GstPlayerCtrl::GetAudioTrackInfo(std::vector<Format> &audioTrack)
 int32_t GstPlayerCtrl::GetVideoWidth()
 {
     std::unique_lock<std::mutex> lock(mutex_);
-    CHECK_AND_RETURN_RET_LOG(trackParse_ != nullptr, 0, "trackParse_ is nullptr");
-
-    return trackParse_->GetVideoWidth();
+    return videoWidth_;
 }
 
 int32_t GstPlayerCtrl::GetVideoHeight()
 {
     std::unique_lock<std::mutex> lock(mutex_);
-    CHECK_AND_RETURN_RET_LOG(trackParse_ != nullptr, 0, "trackParse_ is nullptr");
-
-    return trackParse_->GetVideoHeight();
+    return videoHeight_;
 }
 
 int32_t GstPlayerCtrl::SetRate(double rate)
@@ -759,7 +755,7 @@ void GstPlayerCtrl::OnErrorCb(const GstPlayer *player, const GstMessage *msg, Gs
 }
 
 void GstPlayerCtrl::OnResolutionChanegdCb(const GstPlayer *player,
-    int32_t width, int32_t height, const GstPlayerCtrl *playerGst)
+    int32_t width, int32_t height, GstPlayerCtrl *playerGst)
 {
     CHECK_AND_RETURN_LOG(player != nullptr, "player is null");
     CHECK_AND_RETURN_LOG(playerGst != nullptr, "playerGst is null");
@@ -767,7 +763,7 @@ void GstPlayerCtrl::OnResolutionChanegdCb(const GstPlayer *player,
     playerGst->OnResolutionChange(width, height);
 }
 
-void GstPlayerCtrl::OnResolutionChange(int32_t width, int32_t height) const
+void GstPlayerCtrl::OnResolutionChange(int32_t width, int32_t height)
 {
     Format format;
     (void)format.PutIntValue(std::string(PlayerKeys::PLAYER_WIDTH), width);
@@ -777,6 +773,8 @@ void GstPlayerCtrl::OnResolutionChange(int32_t width, int32_t height) const
         MEDIA_LOGD("OnResolutionChange width:%{public}d, height:%{public}d", width, height);
         tempObs->OnInfo(INFO_TYPE_RESOLUTION_CHANGE, 0, format);
     }
+    videoWidth_ = width;
+    videoHeight_ = height;
 }
 
 void GstPlayerCtrl::OnSeekDoneCb(const GstPlayer *player, guint64 position, GstPlayerCtrl *playerGst)
diff --git a/services/engine/gstreamer/player/gst_player_ctrl.h b/services/engine/gstreamer/player/gst_player_ctrl.h
index 777bae8..26e499a 100644
--- a/services/engine/gstreamer/player/gst_player_ctrl.h
+++ b/services/engine/gstreamer/player/gst_player_ctrl.h
@@ -72,7 +72,7 @@ public:
     static void OnSourceSetupCb(const GstPlayer *player, GstElement *src, GstPlayerCtrl *playerGst);
     static void OnElementSetupCb(const GstPlayer *player, GstElement *src, GstPlayerCtrl *playerGst);
     static void OnResolutionChanegdCb(const GstPlayer *player,
-        int32_t width, int32_t height, const GstPlayerCtrl *playerGst);
+        int32_t width, int32_t height, GstPlayerCtrl *playerGst);
     static void OnCachedPercentCb(const GstPlayer *player, guint percent, GstPlayerCtrl *playerGst);
     static void OnBufferingTimeCb(const GstPlayer *player, guint64 bufferingTime, guint mqNumId,
         GstPlayerCtrl *playerGst);
@@ -91,7 +91,7 @@ private:
     void OnEndOfStream();
     void OnMessage(int32_t extra) const;
     void OnBufferingUpdate(const std::string Message) const;
-    void OnResolutionChange(int32_t width, int32_t height) const;
+    void OnResolutionChange(int32_t width, int32_t height);
     void InitDuration();
     void PlaySync();
     void SeekSync(uint64_t position, const PlayerSeekMode mode);
@@ -143,6 +143,8 @@ private:
     bool seeking_ = false;
     std::map<guint, guint64> mqBufferingTime_;
     std::shared_ptr<GstPlayerTrackParse> trackParse_ = nullptr;
+    int32_t videoWidth_ = 0;
+    int32_t videoHeight_ = 0;
 };
 } // Media
 } // OHOS
diff --git a/services/engine/gstreamer/player/gst_player_track_parse.cpp b/services/engine/gstreamer/player/gst_player_track_parse.cpp
index 4af3eca..0059485 100644
--- a/services/engine/gstreamer/player/gst_player_track_parse.cpp
+++ b/services/engine/gstreamer/player/gst_player_track_parse.cpp
@@ -122,36 +122,6 @@ int32_t GstPlayerTrackParse::GetAudioTrackInfo(std::vector<Format> &audioTrack)
     return MSERR_OK;
 }
 
-int32_t GstPlayerTrackParse::GetVideoWidth()
-{
-    for (auto iter = videoTrackInfo_.begin(); iter != videoTrackInfo_.end(); iter++) {
-        auto trackInfoMap = iter->begin()->second;
-        if (trackInfoMap.count(std::string(PlayerKeys::PLAYER_WIDTH)) > 0) {
-            return std::stoi(trackInfoMap.at(std::string(PlayerKeys::PLAYER_WIDTH)));
-        }
-
-        MEDIA_LOGE("not find video width");
-        break;
-    }
-    MEDIA_LOGE("videoTrackInfo_ is null");
-    return 0;
-}
-
-int32_t GstPlayerTrackParse::GetVideoHeight()
-{
-    for (auto iter = videoTrackInfo_.begin(); iter != videoTrackInfo_.end(); iter++) {
-        auto trackInfoMap = iter->begin()->second;
-        if (trackInfoMap.count(std::string(PlayerKeys::PLAYER_HEIGHT)) > 0) {
-            return std::stoi(trackInfoMap.at((std::string(PlayerKeys::PLAYER_HEIGHT))));
-        }
-
-        MEDIA_LOGE("not find video width");
-        break;
-    }
-    MEDIA_LOGE("videoTrackInfo_ is null");
-    return 0;
-}
-
 std::string GstPlayerTrackParse::GetSerializedValue(const GValue *value)
 {
     if (G_VALUE_HOLDS_STRING(value)) {
diff --git a/services/engine/gstreamer/player/gst_player_track_parse.h b/services/engine/gstreamer/player/gst_player_track_parse.h
index 92748bf..be8f7a5 100644
--- a/services/engine/gstreamer/player/gst_player_track_parse.h
+++ b/services/engine/gstreamer/player/gst_player_track_parse.h
@@ -29,8 +29,6 @@ public:
     static std::shared_ptr<GstPlayerTrackParse> Create();
     int32_t GetVideoTrackInfo(std::vector<Format> &videoTrack);
     int32_t GetAudioTrackInfo(std::vector<Format> &audioTrack);
-    int32_t GetVideoWidth();
-    int32_t GetVideoHeight();
     void SetDemuxerElementFind(bool isFind);
     bool GetDemuxerElementFind();
     static void OnPadAddedCb(const GstElement *element, const GstPad *pad, GstPlayerTrackParse *playerTrackInfo);
