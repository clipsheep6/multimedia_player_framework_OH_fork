# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

MEDIA_ROOT_DIR = "//foundation/multimedia/media_standard"

config("media_ndk_config") {
  include_dirs = [
    "$MEDIA_ROOT_DIR/interfaces/inner_api/native",
    "$MEDIA_ROOT_DIR/interfaces/kits/ndk",
    "$MEDIA_ROOT_DIR/frameworks/ndk/avcodec",
    "$MEDIA_ROOT_DIR/frameworks/ndk/common",
    "//foundation/graphic/graphic_2d/frameworks/surface/include"
  ]

  cflags = [
    "-fno-exceptions",
    "-Wall",
    "-fno-common",
    "-fstack-protector-strong",
    "-Wshadow",
    "-FPIC",
    "-FS",
    "-O2",
    "-D_FORTIFY_SOURCE=2",
    "-Wformat=2",
    "-Wdate-time",
  ]

  cflags_cc = [
    "-std=c++17",
    "-fno-rtti",
  ]
}

ohos_shared_library("media_ndk") {
  install_enable = true
  sources = [

    "$MEDIA_ROOT_DIR/frameworks/ndk/avcodec/ndk_video_decoder.cpp",
    "$MEDIA_ROOT_DIR/frameworks/ndk/avcodec/ndk_audio_decoder.cpp",
    "$MEDIA_ROOT_DIR/frameworks/ndk/avcodec/ndk_audio_encoder.cpp",
    "$MEDIA_ROOT_DIR/frameworks/ndk/common/ndk_av_format.cpp",
    "$MEDIA_ROOT_DIR/frameworks/ndk/common/ndk_av_memory.cpp",
  ]

  public_configs = [
    ":media_ndk_config",
    "//foundation/graphic/graphic_2d/frameworks/surface:surface_public_config",
  ]

  deps = [
    "//foundation/graphic/graphic_2d/frameworks/surface:surface",
    "//foundation/multimedia/media_standard/interfaces/inner_api/native:media_client",
    "//foundation/multimedia/media_standard/services/utils:media_format",
    "//foundation/multimedia/media_standard/services/utils:media_service_utils",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
  ]

  subsystem_name = "multimedia"
  part_name = "multimedia_media_standard"
}
